JGCSCS
7
Download the Just Great Software Custom Syntax Coloring Scheme Editor from https://www.editpadpro.com/cscs.html to create and edit Just Great Software Custom Syntax Coloring Schemes
TRUE
Markdown for MishMash color palette
*.md, *.markdown
Rex (from RexEgg)
Please contact via http://www.RexEgg.com
http://www.RexEgg.com

TRUE


38
Hello there,

Welcome to my Markdown scheme for the MishMash color palette. 

You can download MishMash here:
https://github.com/boolbag/EditPad-Goodies/tree/master/Making%20Text%20Pretty%20-%20Syntax%20Coloring%20and%20Color%20Palettes/Color%20Palettes/MishMash
The scheme is really made for MishMash. It might work reasonably well with other palettes, and atrociously with others. 

The scheme itself lives on GitHub:
https://github.com/boolbag/EditPad-Goodies/tree/master/Making%20Text%20Pretty%20-%20Syntax%20Coloring%20and%20Color%20Palettes/Syntax%20Coloring%20Schemes/Markdown/Markdown%20for%20MishMash

My goal was to produce something that would make it visually pleasant to work with Markdown in EPP, while adding a few syntax elements specific to GitHub's flavor. And definitions and List Blocks from reStructuredText (not Markdown, I know). And throw in things like TODOs for good measure.
But I did not intend to fully explore every corner of the Commonmark Spec.

Since I didn't do much testing or thoroughly study the specs, there will be a few bugs and a few things missing.
When you find one, please comment in the GitHub repository — or send me a pull request if you're used to that.
Or contact me via my [regex tutorial website](http://www.RexEgg.com)
You never know, I might have the time to fix it.

You may also want to check out Marek's Markdown scheme, as the two are completely independent and he may cover something which I did not.

Design Notes
========
Why the SubSchemes?
To avoid lookbehinds. When you land on a subscheme, you are guaranteed to have matched what precedes, so you don't need to try to 
check for that via lookbehind. This makes it much more efficient to process multi-colored elements such as urls or checklists.

Resources
-------------
* [Repo for this scheme](https://github.com/boolbag/EditPad-Goodies/tree/master/Making%20Text%20Pretty%20-%20Syntax%20Coloring%20and%20Color%20Palettes/Syntax%20Highlighting%20Schemes/Markdown/Markdown%20for%20MishMash)
* [Marek's Markdown scheme](https://github.com/marek-stoj/EditPad-Pro-Markdown)
* [Github-Flavored Markdown](https://github.github.com/gfm)
* [Markdown Cheat Sheet](https://www.markdownguide.org/cheat-sheet/)
* [Commonmark Spec](https://spec.commonmark.org/)
* [Multimarkdown](https://rawgit.com/fletcher/MultiMarkdown-6-Syntax-Guide/master/index.html)
* [Spec Markdown](https://leebyron.com/spec-md/) (a flavor of Markdown for writing **specs**, technical documents etc.)
* [Critic Markdown](http://criticmarkup.com/users-guide.php) (another flavor with non-standard features)
* [reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html)
167


# Let's Talk About GitHub Markdown!

Hey there @reader, did you know that GitHub supports @mention callouts?
And that it automatically converts plain links like http://www.GitHub.com ?

Of course they also have <http://autolinks>… 

and [classic links](http://www.a.com) 
and [link reference definitions]: http://.... "optional title"

For ![an image](http://www.b.com) just prepend an exclamation point.

Some texts use a lot of [full reference links][citation needed] 
…which should not be confused with a [collapsed reference link][]

## Code: inline and in blocks

Is code why you're here? `Backticks` let you mark it up inline.

Then there is the three-backtick syntax. 

```
a = [2 * i for i in range(10)]
# try to divide by zero if we get a chance
```

It also works with three tildes `~~~`:

~~~
Tildes are harder to reach than backticks!
On U.S. keyboards, you have to press the Shift key.
~~~

You can also markup code just by indenting it, starting off with a single tab or four spaces:

    a = (2 * i for i in range(10))
    # second line

Note how the line starting with a `#` does not turn into a header. Unlike the next one.


### Sometimes You Must Respond

You add a blockquote by using the "greater-than" symbol, i.e. `>`:

> What are you doing this weekend?
> 
> Want to grab a pizza?
> 


#### Miscellaneous Formatting

Now of course you can make things **bold** using two stars or __underscores__.
To _italicize_, it's the same idea but with *a single star or underscore*.
But the really tricky thing is that two `~` (squiggle characters) create a strikethrough. 

Since that doesn't exist in EditPad 7, this is hidden like so: ~~select me~~. To see the text, select it.


##### What Else?

I should probably mention checklists:

- [x] Procrastinate 
- [ ] Push my commits to GitHub 
- [ ] Open a pull request

I doubt you'll want to make tables, but if you did, here you go.


| Monday  | Friday  |
|---------|---------|
|   Sad   |  Happy  |

Then there's an aternate method for creating headers. You do it by underlining the title.


Benefit of this Method: Headers looks Prettier
==============================================

(In mean, they look prettier in EditPad.)

You can either use equals (`=`) or hyphens (`-`). Also note:

You Don't Actually Have to Match the Number of Characters
---


This may be a bit boring, but you can specify section breaks with three or more dashes, stars or underscores. You're allowed to start the line by up to three spaces.


---


One more:

   ***  **  *  ***  ***


Okay?

Oops, time to study a bit of Spanish. Hang on.

cacaotero
: Persona que cultiva cacao o negocia con él.

Okay, I'm back. The above is how you insert a word definition in [reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html), which is __not__ Markdown — it's not in the [Commonmark spec](https://spec.commonmark.org/) and __GitHub doesn't support it__.

Here's another non-standard feature. It's meant to help _you_ while you work on your documents in EPP, not to render in a Markdown-aware window.

TODO: remove all "todos", "reviews" and "fixmes"

It works by starting a line with the uppercase words `TODO`, `FIXME` or `REVIEW` followed by a `:` colon.

REVIEW: all of this

FIXME: this section needs work


##### What Else?

**Lists! ¿How did we get this far without mentioning lists?**

   1. This is probably MORE permissive than GitHub… Don't rely on it to check your Markdown syntax! [^1]

   2. There's probably a fair amount of Mardown syntax I haven't addressed.
     * html tags
     * maybe certain kinds of links
     * bold underline…

   3. I didn't go deep into **embedded styles** or \`escaping styles with backslashes\`

 (But the two styles on the previous line are embedded within a list, and there is something of the sort for [urls](http://), checklists and footnotes.) [^1]

- [x] Discussed lists
- [ ] Discussed emojis

This scheme is really just to make Markdown documents more pleasant to look at. So it's mostly for the basic Markdown that I (and most people) use. Mmm, to be fair, I put a lot in here that I never use.

Like _List Blocks_, from [reStructuredText](http://docutils.sourceforge.net/docs/ref/rst/restructuredtext.html).

|  Not sure what the point of this is
|  But it looks cool…
|                  No?

At this stage, I'll admit that I added wire box corners so I could do things like this:

                        ┌──────────────────────────┐
                        │ I Feel Wired, Don't You? │
                        └──────────────────────────┘

It's not in the spec, and you don't have to use it.


###### Finally

Hope this is useful to some of you. If you have specific requests, let me know.

Have a great day and remember to :smile: (that's right, forgot to tell you about _emojis_)

  ______

[^1]: As far as I know, Github doesn't allow footnotes.


2
0
0

0
34
Heading 1
# Heading 1
^[ ]{0,3}#[ ].*
FALSE
FALSE
f1
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Heading 2
## Heading 2
^[ ]{0,3}#{2}[ ].*
FALSE
FALSE
f2
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Heading 3
### Heading 3
^[ ]{0,3}#{3}[ ].*
FALSE
FALSE
f3
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Heading 4
#### Heading 4
^[ ]{0,3}#{4}[ ].*
FALSE
FALSE
f4
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Heading 5
##### Heading 5
^[ ]{0,3}#{5}[ ].*
FALSE
FALSE
f5
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Heading 6
###### Heading 6
^[ ]{0,3}#{6}[ ].*
FALSE
FALSE
f6
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Header 1, settext-style
Top headers are also specified when the second line is equal signs
(?m)^[ ]{0,3}\S.*(?:\r?\n|\r)[ ]{0,3}=(?:=*[ ]*)$
FALSE
FALSE
muhl
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Header 2, , settext-style
Top headers are also specified when the second line is hyphens
(?m)^[ ]{0,3}\S.*(?:\r?\n|\r)[ ]{0,3}-(?:-*[ ]*)$
FALSE
FALSE
warn
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Page Break
Order before Bold and Lists, as they may interfere
(?m)^[ \t]{0,3}([-_*])(?:[ \t]*\1){2,}[ \t]*$
FALSE
FALSE
f6
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Strikethrough
A GitHub special: ~~strikethrough~~ in MishMash this is black on black
(?<![\\~])~~(?![ ~])[^~]+~~(?!~)
FALSE
FALSE
red
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Bold with Stars
Two ** # color used to be Preprocessor statement
(?<![\\*])\*\*(?![ *])[^*]+\*\*(?!\*)
FALSE
FALSE
mue
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Bold with Underscores
Two __  # color used to be Preprocessor statement
(?<![\\_])__(?![ _])[^_]+__(?!_)
FALSE
FALSE
mue
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Italics with underscore
single _underscore_ # color used to be hint message
(?<![\\_])_(?![ _])[^_]+_(?!_)
FALSE
FALSE
typ
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Italics with Star
*single star* # color used to be hint message
(?<![\\*])\*(?![ *])[^*]+\*(?!\*)
FALSE
FALSE
typ
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Inline code
`like this`
(?<![\\`])`(?![ `])[^`]+`(?!`)
FALSE
FALSE
codehl
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Emoji
:thumbsup:
(?<![:\\]):\w+:(?!:)
FALSE
FALSE
em
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
CHECKLIST: initial dash
Match the first part of "- [x] Things to to" and guarantee the rest of the line before handing over to SubSchemes
^- (?=\[[x ]\][ ].*)
FALSE
FALSE
comm
0


-1
1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link or Ref: Open First Bracket
Either [A URL](like this) OR [A Full Reference Link][Like That] OR [A Collapsed Reference Link][] OR [link reference definition]: http://... "optional title"
\[(?=[^\]\r\n]*\](?:\[[^\]\r\n]*\]|\([^)\r\n]*\)|:[ ]\S*/\S+))
FALSE
FALSE
int
0


-1
4
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Bang before image
Nice touch to color just the exclamation point
!(?=\[[^\]\r\n]*\])
FALSE
FALSE
addr
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
URL brackets
Just the brackets or parens around parts of a reference / url… lovely touch
\[(?=[^\]\r\n]*\][[(])|(?<=\[[^\]\r\n]*)\](?=[[(])|(?<=\[[^\]\r\n]*\])[[(]|(?<=\[[^\]\r\n]*\]\[[^\]\r\n]*)\]|(?<=\[[^\]\r\n]*\]\([^)\r\n]*)\)
FALSE
FALSE
int
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
List
Starts with *, - or digit+dot
^[ \t]*(?:[-*+]|\d+[.)])
FALSE
FALSE
mu
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Blockquote
> Like this
^[ \t]*\>.*
FALSE
FALSE
keyword
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Code Block
``` code ``` OR    ~~~ code ~~~
(?sm)^[ ]{0,3}(```|~~~).*?^[ ]{0,3}\1
FALSE
FALSE
codehl
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Code Block
Four spaces
^(?>[ ]{4,})(?![┌└│╔║╚]).*
FALSE
FALSE
codehl
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Autolink

<(?:https?|ftp|ssh):[^\s>]+>
FALSE
FALSE
ilink
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Plain link
GitHub automatically converts links
(?i)(?:https?|ftp|ssh):[^\s>]+(?=\s|$)
FALSE
FALSE
ilink
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
@mention
@dude what's up?
(?m)(?<=^|\s)@\w+(?=\s|$)
FALSE
FALSE
succ
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Table
Starts and ends with Pipe character
^\|(?!\|).*(?<!\|)\|[ ]*$
FALSE
FALSE
sec
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Footnote

^[ ]{0,3}\[\^[0-9]+\].*
FALSE
FALSE
patt
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Footnote Call
[^3]
\[\^[0-9]+\]
FALSE
FALSE
patt
0


-1
-1
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Definition
A lone word is defined on the next line if it starts with a colon
(?m)^[ ]{0,3}\w+(?:\r?\n|\r)[ ]{0,3}:[ ]\w.*
FALSE
FALSE
err
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
TODO keyword
Just the TODO: or REVIEW:  or FIXME:
^[ \t]*(?:TODO|FIXME|REVIEW):
FALSE
FALSE
hint
0


-1
3
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
List Block
A reTructuredText feature
^[|].*
FALSE
FALSE
sec
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Wire Box
Wire boxes
^[ \t]*[┌└│╔║╚].*
FALSE
FALSE
sec
0


-1
-1
3
FALSE
TRUE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
0
10
Checklist Brackets
1
const
3



0
0

0
1
CHECKLIST: [Brackets]
Match the bracket part of "- [x] Things to to"
\[[x ]\]
FALSE
FALSE
const
0


-1
2
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Checklist Tail
1
comm
3



0
0

0
1
CHECKLIST: tail
Match space and the rest of the line in "- [x] Things to to"
[ ].*
FALSE
FALSE
comm
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
TODO tail
1
int
3



0
0

0
1
TODO second part
Match end of line and hand control back to Default after "TODO: | REVIEW:  | FIXME:"
.*
FALSE
FALSE
int
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link: First Text
1
ilink
3



0
0

0
2
Link Reference Definition
Different color for this type of link: [link reference definition]: http://... "optional title"
[^\]\r\n]*(?=\]:)
FALSE
FALSE
muv
0


-1
5
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Other Links
[This Text](of this whole thing) OR  [This Text][of this whole thing]
[^\]\r\n]*
FALSE
FALSE
ilink
0


-1
5
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link: Close Initial Bracket
1
int
3



0
0

0
1
Close Initial Bracket
[This Text](of this whole thing) OR  [This Text][of this whole thing]
\]
FALSE
FALSE
int
0


-1
6
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link: Begin Part Two
1

3



0
0

0
4
Complete Square Part
Full Reference Link: finish here with [This WHOLE thing including the brackets]
\[[^\]\r\n]+\]
FALSE
FALSE
keyword
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Paren
[url](←this paren) : in the case of a URL, we do even more detailing
\(
FALSE
FALSE
int
0


-1
7
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Collapsed Link
[foo][] ← these two brackets, this is called a "Collapsed Reference Link"
\[\]
FALSE
FALSE
int
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Colon Space
[link reference definition]: http://... "optional title"
:[ ]
FALSE
FALSE
addr
0


-1
9
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
url: Second Text
1
muv
3



0
0

0
1
Second Text
[NOT this part](this part) not including the parentheseses
[^)\r\n]*
FALSE
FALSE
muv
0


-1
8
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
url: Close Final Paren
1
int
3



0
0

0
1
Close Paren
[url](final paren→)
\)
FALSE
FALSE
int
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link Ref Definition: Link
1

3



0
0

0
1
Link
[link reference definition]: http://... "optional title" → the http://… part
\S*/\S+
FALSE
FALSE
ilink
0


-1
10
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
Link Ref Definition: Title
1
str
3



0
0

0
1
Optional Title
[link reference definition]: http://... "optional title"  Making the whole thing optional guarantees the return to the default scheme
(?:[ ]{1,3}"[^"]*"(?!"))?
FALSE
FALSE
f9
0


-1
0
3
FALSE
FALSE
FALSE




FALSE

0
0
TRUE
0
0
0
0
0
0
